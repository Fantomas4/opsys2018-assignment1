#!/bin/bash

webpage_input="./input_webpages"
webpages_queue="./script_data/webpages_queue"

while IFS= read -r input_url
do
	# ${input_url:0:1} expands to the substring starting at position 
	# 0 of length 1 (gives us the first character of the line)

	if [ ${input_url:0:1} = "#" ]; then
		echo "Found # so line was discarded"
	else
		
		# find the webpage's url entry position in the url queue.
		# The number indicating the position corresponds to the name
		# of the text file inside ./webpages_data that holds the
		# target webpage's save.
		# If the given webpage's url is NOT included in the webpages_queue,
		# then the initial value 0 we assign to i will remain unchanged.
		
		i=0
		found_url=0

		while IFS= read -r queue_entry
		do
		
		
			# get the webpage url and the md5sum seperately
			
			#while IFS=' ' read -r entry_data
			#do
			#	echo "mpika1"
			#	queue_url=${entry_data[0]}
			#	url_md5sum=${entry_data[1]}

			#done <<< $queue_entry
			
			entry_data=($queue_entry)
			queue_url=${entry_data[0]}
			url_md5sum=${entry_data[1]}
			
			#echo "DEBUG ---------------------"
			#echo $queue_url
			#echo $url_md5sum
			#echo "---------------------------"
		
			if [ "$input_url" = "$queue_url" ]; then
				echo "Found the target url in the url_queue"
				found_url=1
				
				# *** Chech the webpage for changes ***
				# Download the currect webpage's md5sum and compare it 
				# to the stored md5sum for this webpage.
				current_md5sum=($(wget -q -O - $input_url | md5sum))
				
				if [ $url_md5sum != $current_md5sum ]; then
					# The webpage has changed
					echo "Detected changes in the given webpage"
					echo $queue_url
				fi
				#break
			else
				i+=1
			fi
		done < "$webpages_queue"
		
		if [ $found_url = 0 ]; then
			echo "Target url was NOT found in the url_queue"
			
			# generate the webpage's md5sum
			url_md5sum=($(wget -q -O - $input_url | md5sum))
			
			# add the webpage's url and md5sum as a new entry to the webpage_queue file.
			# NOTE: 
			# If you use only a single more than symbol >, it will delete the file and write ONLY what you asked it to. 
			# a double >> adds it onto the end without deleting anything.
			
			#echo $input_url $url_md5sum >> $webpages_queue
			
			echo "$input_url $url_md5sum" &>> $webpages_queue
			# echo "hello" >> $webpages_queue
		
			echo "$input_url INIT"
		fi
		
	fi
		
done < "$webpage_input"
